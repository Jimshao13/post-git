<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.post.db.mapper.PackageMapper">


    <!--快递入库,前端给status,msgStatus传入默认值1，station可以以下拉菜单的方式进行选择，传入int型数据，默认值是1，putInTime自动生成-->
    <insert id="save" parameterType="Package" keyProperty="id" useGeneratedKeys="true">
        insert into p_package values (#{id},#{packId},#{receiverPhone},
        #{station},#{putInTime},#{pickUpCode},#{status},#{msgStatus},#{expressCompany},#{path})
    </insert>

    <!--用户或管理人员根据手机号查询用户全部待取快递,此时无出库时间-->
    <select id="findByPhoneUnToken" parameterType="String" resultType="Package">
        select p_package.id, packId,receiverPhone,stationName,putInTime,pickUpCode,s_status,m_status,expressName,path
        from p_package,p_status,p_express,p_station,m_status
        where receiverPhone=#{receiverPhone} AND status='1' AND p_package.status=p_status.s_id
        AND p_package.expressCompany=p_express.e_id AND station=p_station.id AND p_package.msgStatus=m_status.m_id
    </select>

    <!--用户或管理人员根据手机号查询用户过去三个月的已取快递,-->
    <select id="findByPhoneToken" parameterType="String" resultType="Package">
        select p_package.id,p_package.packId as packId,receiverPhone,stationName,path,putInTime,pickUpCode,
        package_out_log.curDate as pickUpTime,s_status,m_status,expressName
        from p_package,p_status,m_status,package_out_log,p_express,p_station
        where package_out_log.curDate > DATE_SUB(CURDATE(), INTERVAL 3 MONTH)
        AND receiverPhone=#{receiverPhone} AND status='2' AND p_package.status=p_status.s_id And p_package.packId=package_out_log.packId  AND p_package.expressCompany=p_express.e_id
        AND station=p_station.id AND p_package.msgStatus=m_status.m_id
        AND p_package.expressCompany=p_express.e_id
    </select>

    

    <!--用户或管理人员根据快递单号查询快递-->
    <select id="findByPackId" parameterType="String" resultType="Package">
         select p_package.id,p_package.packId as packId,receiverPhone,station,stationName,putInTime,package_out_log.curDate as pickUpTime,pickUpCode,status,s_status,
         expressCompany,expressName,path,msgStatus,m_status
         from p_package,p_status,p_express,m_status,package_out_log,p_station
         where p_package.packId=package_out_log.packId AND p_package.status=p_status.s_id AND p_package.msgStatus=m_status.m_id
         AND p_package.packId=#{packId} AND p_package.expressCompany=p_express.e_id AND station=p_station.id
    </select>


    <!--根据id查询快递,项目内部使用，根只提供较为简单的查询即可满足需求-->
    <select id="findById" parameterType="String" resultType="Package">
         select id,packId,receiverPhone,station,putInTime,pickUpCode,status,msgStatus,expressCompany,path
         from p_package where id=#{id}
    </select>


    <!--管理人员查询驿站待取件，此时出库时间为空,null-->
    <select id="findUnToken" resultType="Package">
         select * from p_package,p_status,m_status,p_express,p_station
         where  status='1' AND p_package.status=p_status.s_id  AND p_package.msgStatus=m_status.m_id
         AND p_package.expressCompany=p_express.e_id AND station=p_station.id
    </select>

    <!--查询今日的已取件,此时可以看到快递的出库时间-->
    <select id="findToken" resultType="Package">
         select p_package.id,p_package.packId as packId,receiverPhone,station,stationName,path,putInTime,pickUpCode,
         package_out_log.curDate as pickUpTime,status,
         s_status,msgStatus,m_status,expressCompany,expressName
         from p_package,p_status,m_status,p_express,p_station,package_out_log
         where TO_DAYS(package_out_log.curDate)=TO_DAYS(NOW())
         AND status='2' AND p_package.status=p_status.s_id  AND p_package.msgStatus=m_status.m_id
         AND p_package.expressCompany=p_express.e_id AND station=p_station.id AND p_package.packId=package_out_log.packId
    </select>


    <!--查询滞留件信息列表，此时出库时间为null-->
    <select id="findDetained" resultType="Package">
         select * from p_package,p_status,m_status,p_express,p_station
         where TIMESTAMPDIFF(hour,putInTime,Now()) &gt;24
         AND status='1' AND p_package.status=p_status.s_id  AND p_package.msgStatus=m_status.m_id
         AND p_package.expressCompany=p_express.e_id AND station=p_station.id
    </select>

    <!--查询目前滞留件数量：24小时内未取件-->
    <select id="detainedNum" resultType="Integer">
        select count(*) from p_package where TIMESTAMPDIFF(hour,putInTime,Now())&gt;24 AND status='1'
    </select>

    <!--管理人员查询驿站目前所有未处理的问题件信息列表-->
    <select id="findProblem" resultType="Package">
         select * from p_package,p_status,m_status,p_express,p_station
         where status='3' AND p_package.status=p_status.s_id  AND p_package.msgStatus=m_status.m_id
         AND p_package.expressCompany=p_express.e_id AND station=p_station.id
    </select>

    <!--查询驿站目前现存的问题件数量-->
    <select id="problemNum" resultType="Integer">
        select count(*) from p_package where  status='3'
    </select>


    <!--查询驿站目前未短信通知的快递-->
    <select id="findUninformed" resultType="Package">
        select * from p_package where msgStatus='1'
    </select>

    <!--驿站今日截止到目前的已取件数量-->
     <select id="tokenNum"  resultType="Integer">
         select count(*) from package_out_log where TO_DAYS(package_out_log.curDate)=TO_DAYS(NOW())
     </select>

    <!--查询驿站今日待取件数量-->
    <select id="unTokenNum"  resultType="Integer">
         select count(*) from p_package where   status='1'
    </select>

    <!--出库操作之一：修改快递状态为已取件，
    问题件修改状态为已取件：代表问题件得到解决-->
    <update id="updateStatusPicked" parameterType="Package">
        update p_package set status='2' where id=#{id}
    </update>

    <!--管理人员修改快递状态为问题件-->
    <update id="updateStatusProblem" parameterType="Package">
        update p_package set status='3' where id=#{id}
    </update>

    <!--批量修改快递状态为已通知：将未短信通知的快递状态修改为已通知-->
    <update id="updateStatusInformed" >
        update p_package set msgStatus='2' where  status='1' AND msgStatus='1'
    </update>


    <!--错峰取件：查询当日9点~21点每小时内的取件量-->
    <select id="todayHourNum" resultType="Integer">
        SELECT
        IF(count IS NULL, 0, count) as count
        FROM (SELECT
        count(*) AS count,
        DATE_FORMAT(curDate, '%H')
        AS hour
        FROM package_out_log
        where  year(curDate)=year(now()) and month(curDate) = month(now()) and day(curDate) = day(now())
        GROUP BY hour
        ORDER BY 1) A
        RIGHT JOIN (SELECT one.hours + two.hours AS dayHour
        FROM (SELECT 0 hours
        UNION ALL SELECT 1 hours
        UNION ALL SELECT 2 hours
        UNION ALL SELECT 3 hours
        UNION ALL SELECT 4 hours
        UNION ALL SELECT 5 hours
        UNION ALL SELECT 6 hours
        UNION ALL SELECT 7 hours
        UNION ALL SELECT 8 hours
        UNION ALL SELECT 9 hours) one
        CROSS JOIN (SELECT 0 hours
        UNION ALL SELECT 10 hours
        UNION ALL SELECT 20 hours) two
        WHERE (one.hours + two.hours) &lt; 21 AND (one.hours + two.hours)&gt;8) B ON A.hour = CONVERT(B.dayHour, SIGNED)
        ORDER BY dayHour
    </select>

    <!--错峰取件：查询昨日9点~21点每小时内的取件量-->
    <select id="yesterdayHourNum" resultType="Integer">
        SELECT
        IF(count IS NULL, 0, count) as count
        FROM (SELECT
        count(*) AS count,
        DATE_FORMAT(curDate, '%H')
        AS hour
        FROM package_out_log
         where  year(curDate)=year(now()) and month(curDate) = month(now()) and day(curDate) = day(DATE_SUB(curdate(),INTERVAL -1 DAY))
        GROUP BY hour
        ORDER BY 1) A
        RIGHT JOIN (SELECT one.hours + two.hours AS dayHour
        FROM (SELECT 0 hours
        UNION ALL SELECT 1 hours
        UNION ALL SELECT 2 hours
        UNION ALL SELECT 3 hours
        UNION ALL SELECT 4 hours
        UNION ALL SELECT 5 hours
        UNION ALL SELECT 6 hours
        UNION ALL SELECT 7 hours
        UNION ALL SELECT 8 hours
        UNION ALL SELECT 9 hours) one
       CROSS JOIN (SELECT 0 hours
        UNION ALL SELECT 10 hours
        UNION ALL SELECT 20 hours) two
        WHERE (one.hours + two.hours) &lt; 21 AND (one.hours + two.hours)&gt;8 ) B ON A.hour = CONVERT(B.dayHour, SIGNED)
        ORDER BY dayHour

    </select>







</mapper>